@import '../../base/style/theme.less';

@borderPlace: ~'top', ~'right', ~'bottom', ~'left';

.@{prefix}-input {
    position: relative;
    box-sizing: border-box;
    display: inline-flex;
    flex-flow: row;
    width: 180px;
    overflow: hidden;
    user-select: none;
    transition: all 0.36s;

    &.@{prefix}-input-disabled {
        opacity: 0.6 !important;
    }

    .@{prefix}-input-input {
        flex: 1;
        overflow: hidden;
        border: 0 solid @color-border;
        transition: all 0.36s;

        &.@{prefix}-input-border-all {
            border-width: @border-width;

            &.@{prefix}-input-focused {
                z-index: 1;
                border-color: @color-primary;
                box-shadow: 0 0 3px lighten(@color-primary, 20%);
            }
        }

        .border-place();

        .@{prefix}-input-prefix {
            position: absolute;
            top: 50%;
            left: 0;
            z-index: 2;
            display: flex;
            align-items: center;
            padding: 0 8px;
            line-height: 0;
            color: rgba(0, 0, 0, 0.65);
            transform: translateY(-50%);
        }

        .@{prefix}-input-suffix {
            position: absolute;
            top: 50%;
            right: 0;
            z-index: 2;
            display: flex;
            align-items: center;
            padding: 0 8px;
            line-height: 0;
            color: rgba(0, 0, 0, 0.65);
            transform: translateY(-50%);

            .@{prefix}-input-input-clear {
                margin-left: unit(round(@font-size * 0.4), px);
                cursor: pointer;

                &:only-child {
                    margin: 0;
                }
            }

            .@{prefix}-input-input-password {
                margin-left: unit(round(@font-size * 0.4), px);
                cursor: pointer;

                &:only-child {
                    margin: 0;
                }
            }

            .@{prefix}-input-input-select {
                margin-left: unit(round(@font-size * 0.4), px);
                cursor: pointer;
                transition: transform 0.3s;

                &.@{prefix}-input-input-select-open {
                    transform: rotate(-180deg);
                }

                &:only-child {
                    margin: 0;
                }
            }
        }

        .@{prefix}-input-input-input {
            width: 100%;
            max-width: 100%;
            height: 100%;
            border: 0;
            border-radius: 0;
            outline: none;
            box-shadow: none;

            &.@{prefix}-input-input-textarea {
                word-break: break-all;
                resize: none;
                outline: none;
            }
        }
    }

    &.@{prefix}-input-textarea {
        width: 100%;
        .input-textarea-size();

        &.@{prefix}-input-textarea-auto {
            .@{prefix}-input-input {
                .@{prefix}-input-input-textarea {
                    overflow-y: hidden;
                }
            }
        }
    }

    &.@{prefix}-input-select {
        .@{prefix}-input-input {
            .@{prefix}-input-input-input {
                cursor: pointer;
            }
        }
    }

    .input-size();

    .@{prefix}-input-addon-before,
    .@{prefix}-input-addon-after {
        position: relative;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.36s;
    }
}

.border-place(@i:length(@borderPlace)) when(@i > 0) {
    @place: extract(@borderPlace, @i);

    &.@{prefix}-input-border-@{place} {
        border-@{place}-width: @border-width;

        &::after {
            position: absolute;
            top: if(@place = ~'bottom', auto, 0);
            right: if(@place = ~'left', auto, 0);
            bottom: if(@place = ~'top', auto, 0);
            left: if(@place = ~'right', auto, 0);
            z-index: 1;
            width: if((@place = ~'left') or (@place = ~'right'), @border-width, 100%);
            height: if((@place = ~'top') or (@place = ~'bottom'), @border-width, 100%);
            content: '';
            background: @color-primary;
            transition: transform 0.36s cubic-bezier(0.4, 0, 0.2, 1);
            transform: scale3d(if((@place = ~'top') or (@place = ~'bottom'), 0, 1), if((@place = ~'left') or (@place = ~'right'), 0, 1), 1);
            transform-origin: center center;
        }

        &.@{prefix}-input-focused {
            &::after {
                transform: scale3d(1, 1, 1);
            }
        }
    }

    .border-place(@i - 1);
}

.input-size(@i:length(@size)) when(@i > 0) {
    @name: extract(@size, @i);

    &.@{prefix}-input-@{name} {
        height: unit(round(@font-size * (1.85 + (@i - 1) * 0.3)), px);
        font-size: unit(round(@font-size * (0.7 + (@i - 1) * 0.15)), px);

        .@{prefix}-input-input {
            &.@{prefix}-input-border-all {
                border-radius: unit(round(@font-size * (0.2 + (@i - 1) * 0.05)), px);
            }

            .@{prefix}-input-input-input {
                padding: 0 unit(round(@font-size * (0.3 + (@i - 1) * 0.2)), px);
            }
        }
    }

    &.@{prefix}-input-has-prefix {
        .@{prefix}-input-input {
            .@{prefix}-input-input-input {
                padding-left: 0;
            }
        }
    }

    &.@{prefix}-input-has-suffix {
        .@{prefix}-input-input {
            .@{prefix}-input-input-input {
                padding-right: 0;
            }
        }
    }

    .input-size(@i - 1);
}

.input-textarea-size(@i:length(@size)) when(@i > 0) {
    @name: extract(@size, @i);

    &.@{prefix}-input-@{name} {
        height: unit(round(@font-size * (4.3 + @i * 0.6)), px);

        .@{prefix}-input-input {
            .@{prefix}-input-input-input {
                padding: unit(round(@font-size * (0.3 + (@i - 1) * 0.2)), px);
            }
        }
    }

    .input-textarea-size(@i - 1);
}

.@{prefix}-input-clear-fade-enter-active,
.@{prefix}-input-clear-fade-leave-active {
    transition: opacity 0.5s;
}

.@{prefix}-input-clear-fade-enter,
.@{prefix}-input-clear-fade-leave-to {
    opacity: 0;
}
