@import '../../base/style/theme.less';

@borderPlace: ~'top', ~'right', ~'bottom', ~'left';

.@{prefix}-input-search {
    position: relative;
    box-sizing: border-box;
    display: inline-flex;
    flex-flow: row;
    width: 180px;
    overflow: hidden;
    user-select: none;
    transition: all 0.36s;

    &.@{prefix}-input-search-disabled {
        opacity: 0.6 !important;

        .@{prefix}-input-search-right {
            cursor: default;
        }
    }

    .input-search-size();

    .@{prefix}-input-search-left {
        position: relative;
        display: flex;
        flex: 1;
        overflow: hidden;
        border: 0 solid @color-border;
        transition: all 0.36s;

        .@{prefix}-input-search-left-input {
            width: 100%;
            max-width: 100%;
            height: 100%;
            border: 0;
            border-radius: 0;
            outline: none;
            box-shadow: none;
        }

        &.@{prefix}-input-search-left-border-all {
            border-width: @border-width;

            &.@{prefix}-input-search-left-botton {
                border-top-right-radius: 0;
                border-bottom-right-radius: 0;
            }

            &.@{prefix}-input-search-left-focused {
                z-index: 1;
                border-color: @color-primary;
                box-shadow: 0 0 3px lighten(@color-primary, 20%);
            }
        }

        .search-border-place();

        .@{prefix}-input-search-left-icon {
            display: flex;
            align-items: center;
            justify-content: center;
            padding-left: unit(round(@font-size * 0.4), px);
        }

        .@{prefix}-input-search-left-icon + .@{prefix}-input-search-left-input {
            padding-left: unit(round(@font-size * 0.4), px);
        }

        .@{prefix}-input-search-left-clear {
            display: flex;
            align-items: center;
            margin-right: unit(round(@font-size * 0.4), px);
            margin-left: unit(round(-@font-size * 0.4), px) !important;
            cursor: pointer;
        }

        &.@{prefix}-input-search-left-botton + .@{prefix}-input-search-right {
            padding: 0;

            .@{prefix}-button {
                border-top-left-radius: 0;
                border-bottom-left-radius: 0;
            }
        }
    }

    .@{prefix}-input-search-right {
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 0 unit(round(@font-size * 0.3), px);
        overflow: hidden;
        cursor: pointer;

        &.@{prefix}-input-search-right-fixed {
            position: absolute;
            top: 1px;
            right: 1px;
            bottom: 1px;
            z-index: 1;
            background-color: #fff;
            border-top-right-radius: unit(round(@font-size * 0.3), px);
            border-bottom-right-radius: unit(round(@font-size * 0.3), px);
        }
    }
}

.input-search-size(@i:length(@size)) when(@i > 0) {
    @name: extract(@size, @i);

    &.@{prefix}-input-search-@{name} {
        height: unit(round(@font-size * (1.85 + (@i - 1) * 0.3)), px);
        font-size: unit(round(@font-size * (0.7 + (@i - 1) * 0.15)), px);

        .@{prefix}-input-search-left-border-all {
            border-radius: unit(round(@font-size * (0.2 + (@i - 1) * 0.05)), px);
        }

        .@{prefix}-input-search-right {
            min-width: unit(round(@font-size * (1.85 + (@i - 1) * 0.3)), px);
        }

        .@{prefix}-input-search-left-fixed {
            .@{prefix}-input-search-left-clear {
                margin-right: unit(round(@font-size * (1.85 + (@i - 1) * 0.3)), px);
            }
        }
    }

    .input-search-size(@i - 1);
}

.search-border-place(@i:length(@borderPlace)) when(@i > 0) {
    @place: extract(@borderPlace, @i);

    &.@{prefix}-input-search-left-border-@{place} {
        border-@{place}-width: @border-width;

        &::after {
            position: absolute;
            top: if(@place = ~'bottom', auto, 0);
            right: if(@place = ~'left', auto, 0);
            bottom: if(@place = ~'top', auto, 0);
            left: if(@place = ~'right', auto, 0);
            z-index: 1;
            width: if((@place = ~'left') or (@place = ~'right'), @border-width, 100%);
            height: if((@place = ~'top') or (@place = ~'bottom'), @border-width, 100%);
            content: '';
            background: @color-primary;
            transition: transform 0.36s cubic-bezier(0.4, 0, 0.2, 1);
            transform: scale3d(if((@place = ~'top') or (@place = ~'bottom'), 0, 1), if((@place = ~'left') or (@place = ~'right'), 0, 1), 1);
            transform-origin: center center;
        }

        &.@{prefix}-input-search-left-focused {
            &::after {
                transform: scale3d(1, 1, 1);
            }
        }
    }

    .search-border-place(@i - 1);
}
